// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id      String @id @default(cuid())
  title   String
  content String
}

model Classroom {
  id       String              @id @default(cuid())
  name     String              @unique
  teachers ClassroomTeachers[]
  students ClassroomStudents[]
}

model ClassroomTeachers {
  id          String    @id @default(cuid())
  classroom   Classroom @relation(fields: [classroomId], references: [id])
  classroomId String
  teacherId   String

  @@unique([classroomId, teacherId])
}

model ClassroomStudents {
  id          String    @id @default(cuid())
  classroom   Classroom @relation(fields: [classroomId], references: [id])
  classroomId String
  student     Student   @relation(fields: [studentId], references: [id])
  studentId   String

  @@unique([classroomId, studentId])
}

model Student {
  id                 String               @id @default(cuid())
  firstName          String
  lastName           String
  dob                DateTime
  mood               String?
  actionLogs         StudentActionLog[]
  classrooms         ClassroomStudents[]
  ParentStudent      ParentStudent[]
  profilePicture     String?
  ContactInformation ContactInformation[]
}

model ParentStudent {
  id        String  @id @default(cuid())
  userId    String
  student   Student @relation(fields: [studentId], references: [id])
  studentId String

  @@unique([userId, studentId])
}

model Action {
  id         String             @id @unique @default(cuid())
  name       String
  actionLogs StudentActionLog[]

  @@unique([name])
}

model StudentActionLog {
  id        String   @id @default(cuid())
  student   Student  @relation(fields: [studentId], references: [id])
  studentId String
  action    Action   @relation(fields: [actionId], references: [id])
  actionId  String
  teacherId String
  notes     String?
  createdAt DateTime @default(now())
}

model Role {
  id       String     @id @default(cuid())
  name     String     @unique
  UserRole UserRole[]
}

model UserRole {
  id     String @id @default(cuid())
  userId String
  role   Role   @relation(fields: [roleId], references: [id])
  roleId String

  @@unique([userId, roleId])
}

model ContactInformation {
  id        String   @id @default(cuid())
  firstName String
  lastName  String
  phone     String
  email     String
  relationship String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  studentId String
  Student   Student  @relation(fields: [studentId], references: [id])
}
